var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Slow","category":"page"},{"location":"#Slow","page":"Home","title":"Slow","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Slow. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package exports @slowdef to define a slower, naive implementation of a function, and  change it (even when it's buried in some other function) using the @slow macro. It does  this by performing a Cassette pass on every top-level function call in the expression provided to the macro. Here's an example, where we implement a slow version of a function, and a fast version. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Slow\n\n# fake naive implementation\n@slowdef function f(x)\n    sleep(1)  \n    return sin(x)\nend\n\n# fake fast implementation\nfunction f(x)\n    return sin(x)\nend\n\n@time @slow f(1.0)\n@time f(1.0)","category":"page"},{"location":"","page":"Home","title":"Home","text":"The function definition func(args...) prefaced by @slowdef is replaced with signature func(::Slow.SlowImplementation, args...). Nested use of func can now  be toggled between the slow and fast implementations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"h(x) = f(x)^2 + cos(x)^2\n\n@time @slow h(1.0)\n@time h(1.0)","category":"page"},{"location":"","page":"Home","title":"Home","text":"1.002132 seconds (18 allocations: 464 bytes)\n0.000000 seconds","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that the allocations here arise from the use of @time, not @slow which only operates before compilation.","category":"page"},{"location":"#Single-Function-Selection","page":"Home","title":"Single Function Selection","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"By default, @slow slows every function involved in the expression which has a slow implementation in the caller's module.  It can sometimes be desirable to slow down a specific function. This is achieved by providing a function before the expression to be evaluated by @slow.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> @slowdef function s(x)\n           println(\"slow s\") \n           return sin(x)\n       end\n       s(x) = sin(x)\n       \n       @slowdef function c(x)\n           println(\"slow c\") \n           return cos(x)\n       end\n       c(x) = cos(x)\n\n       h(x) = s(x)^2 + c(x)^2\n\njulia> @slow s h(0.5)\nslow s\n1.0\n\njulia> @slow c h(0.5)\nslow c\n1.0\n\njulia> @slow h(0.5)\nslow s\nslow c\n1.0","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Slow]","category":"page"},{"location":"#Slow.@slow-Tuple{Any}","page":"Home","title":"Slow.@slow","text":"@slow\n\nCall a slow version of a function that was defined with @slowdef. ```\n\n\n\n\n\n","category":"macro"},{"location":"#Slow.@slowdef-Tuple{Any}","page":"Home","title":"Slow.@slowdef","text":"@slowdef\n\nDefine a slow version of a function which can be called with @slow.\n\n\n\n\n\n","category":"macro"},{"location":"#Slow.@slowtest-Tuple{Any}","page":"Home","title":"Slow.@slowtest","text":"@slowtest\n\nShortcut for @test (@slow func(args...)) == func(args...).\n\n\n\n\n\n","category":"macro"}]
}
